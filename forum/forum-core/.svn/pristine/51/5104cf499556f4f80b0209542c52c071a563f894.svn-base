package cdu.xeon.forum.dao;

import java.util.List;

import cdu.xeon.basic.dao.IBaseDao;
import cdu.xeon.basic.model.Pager;
import cdu.xeon.forum.model.Question;


public interface IQuestionDao extends IBaseDao<Question> {
	/**
	 * Search for articles by column and title and status
	 * @param cid
	 * @param title
	 * @return
	 */
	public Pager<Question> find(Integer cid,String title,Integer status);
	/**
	 * Search by user, column, title, and state
	 * @param uid
	 * @param cid
	 * @param title
	 * @return
	 */
	public Pager<Question> find(Integer uid,Integer cid,String title,Integer status);
	/**
	 * The search for articles based on keywords
	 * @param keyword
	 * @return
	 */
	public Pager<Question> searchQuestionByKeyword(String keyword);
	/**
	 * The condition is retrieved by a condition that is retrieved in the title, content, and summary
	 * @param con
	 * @return
	 */
	public Pager<Question> searchQuestion(String con);
	/**
	 * To retrieve a column's recommendation, if cid is empty, it means to retrieve all the articles
	 * @param ci
	 * @return
	 */
	public Pager<Question> findRecommendQuestion(Integer ci);
	/**
	 * Get the articles in this column according to the number of articles and column
	 * @param cid
	 * @param num
	 * @return
	 */
	public List<Question> listQuestionByChannelAndNumber(int cid,int num);
	
	public List<Question> listQuestionsByChannel(int cid);
	/**
	 * Determine whether the column that adds the article needs to be updated
	 * @param cid
	 * @return
	 */
	public boolean isUpdateIndex(int cid);
	/**
	 * Get the latest available articles in a column
	 * @param cid
	 * @return
	 */
	public Question loadLastedQuestionByColumn(int cid);
}
